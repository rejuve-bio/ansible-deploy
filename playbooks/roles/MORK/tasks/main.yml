# MORK Setup
- name: Fix dpkg if interrupted
  command: dpkg --configure -a
  ignore_errors: yes
  tags: MORK
  become: yes

- name: Update apt cache
  apt:
    update_cache: yes
  become: yes
  tags: MORK

- name: Gather installed packages facts
  ansible.builtin.package_facts:
    manager: auto
  tags: MORK

- name: Install required system packages  
  become: yes
  apt:
    name: >
      {{
        ['docker-compose', 'python3', 'python3-pip', 'git']
        + ([] if (ansible_facts.packages.keys() | select('search', 'containerd') | list | length > 0) else ['docker.io'])
      }}
    state: present
    update_cache: yes
  tags: MORK

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes
  tags: MORK

- name: Add current user to docker group
  user:
    name: "{{ ansible_user_id | default(ansible_user) }}"
    groups: docker
    append: yes
  tags: MORK

- name: Create project directory
  file:
    path: "{{ ansible_user_dir }}/services/MORK"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user_id | default(ansible_user) }}"
    group: "{{ ansible_user_id | default(ansible_user) }}"
  tags: MORK

- name: Clone MORK repository
  git:
    repo: https://github.com/DeazStar/MORK.git
    dest: "{{ ansible_user_dir }}/services/MORK"
    version: main
    force: yes
  tags: MORK

- name: Make script executable
  file:
    path: "{{ ansible_user_dir }}/services/MORK/script.sh"
    mode: '0755'
    owner: "{{ ansible_user_id | default(ansible_user) }}"
    group: "{{ ansible_user_id | default(ansible_user) }}"
  tags: MORK

- name: Build Docker image
  shell: |
    cd "{{ ansible_user_dir }}/services/MORK"
    docker build -t mork_pathmap .
  args:
    executable: /bin/bash
  tags: MORK

- name: Create data directory for MORK
  file:
    path: "{{ ansible_user_dir }}/services/MORK/data"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user_id | default(ansible_user) }}"
    group: "{{ ansible_user_id | default(ansible_user) }}"
  tags: MORK

- name: Clean up existing MORK container
  shell: |
    docker stop mork_container || true
    docker rm mork_container || true
  args:
    executable: /bin/bash
  ignore_errors: yes
  tags: MORK

- name: Run MORK container
  shell: |
    docker run -d --name mork_container \
    -p 8231:8231 \
    -v "{{ ansible_user_dir }}/services/MORK/data:/shared/output" \
    mork_pathmap
  args:
    executable: /bin/bash
  tags: MORK

- name: Verify container is running
  shell: docker ps -f "name=mork_container" --format "{{ '{{.Names}} {{.Status}}' }}"
  register: container_status
  until: "'Up' in container_status.stdout"
  retries: 5
  delay: 5
  tags: MORK

- name: Get container logs if verification fails
  shell: |
    docker logs mork_container --tail 50
  register: container_logs
  when: container_status.failed
  changed_when: false
  tags: MORK

- name: Display container logs if deployment failed
  debug:
    var: container_logs.stdout_lines
  when: container_status.failed
  tags: MORK

- name: Check MORK container status
  docker_container_info:
    name: mork_container
  register: mork_service
  ignore_errors: yes

- name: Print MORK deployment status
  debug:
    msg: |
      {% if mork_service.container is defined and mork_service.container.State.Status == "running" %}
      ✅ MORK service deployed successfully and running:
        - mork_container: http://localhost:8231
      {% else %}
      ❌ Deployment incomplete: MORK service is down.
        - mork_container is DOWN. Start with: docker start mork_container
      {% endif %}